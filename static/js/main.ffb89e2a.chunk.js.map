{"version":3,"sources":["_helpers/history.js","_constants/user.constants.js","_reducers/authentication.reducer.js","_reducers/index.js","_reducers/users.reducer.js","_reducers/posts.reducer.js","_helpers/store.js","_helpers/auth-header.js","config.js","_services/user.service.js","_actions/user.actions.js","HomePage/HomePage.js","LoginPage/LoginPage.js","UsersPage/UsersPage.js","BlogsPage/BlogsPage.js","PostsPage/PostsPage.js","App/App.js","index.js"],"names":["history","createBrowserHistory","userConstants","user","JSON","parse","localStorage","getItem","initialState","loggedIn","rootReducer","combineReducers","authentication","state","action","type","users","loggingIn","loading","error","map","id","deleting","filter","userCopy","deleteError","posts","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","authHeader","token","config","stringify","apiUrl","userService","getUsers","fetch","method","headers","then","handleResponse","logout","getPosts","getAll","requestOptions","getById","update","body","delete","removeItem","response","text","data","ok","status","message","statusText","Promise","reject","userActions","dispatch","success","console","log","toString","failure","login","username","from","push","HomePage","useSelector","useDispatch","className","style","display","justifyContent","name","fontSize","to","LoginPage","useState","password","inputs","setInputs","submitted","setSubmitted","location","useLocation","handleChange","e","target","value","useEffect","onSubmit","preventDefault","RegExp","test","validateEmail","pathname","index","findIndex","email","onChange","UsersPage","columns","selector","sortable","cell","row","address","street","suite","city","zipcode","company","catchPhrase","bs","length","title","highlightOnHover","BlogsPage","wrap","pagination","onRowClicked","PostsPage","App","path","component","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffb89e2a.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","export const userConstants = {\r\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\r\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\r\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\r\n\r\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\r\n    \r\n    LOGOUT: 'USERS_LOGOUT',\r\n\r\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\r\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\r\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE',\r\n\r\n    DELETE_REQUEST: 'USERS_DELETE_REQUEST',\r\n    DELETE_SUCCESS: 'USERS_DELETE_SUCCESS',\r\n    DELETE_FAILURE: 'USERS_DELETE_FAILURE',\r\n    \r\n    GET_USERS_REQUEST: 'GET_USERS_REQUEST',\r\n    GET_USERS_SUCCESS: 'GET_USERS_SUCCESS',\r\n    GET_USERS_FAILURE: 'GET_USERS_FAILURE',\r\n\r\n    GET_POSTS_REQUEST: 'GET_POSTS_REQUEST',\r\n    GET_POSTS_SUCCESS: 'GET_POSTS_SUCCESS',\r\n    GET_POSTS_FAILURE: 'GET_POSTS_FAILURE'\r\n};\r\n","import { userConstants } from '../_constants';\r\n\r\nlet user = JSON.parse(localStorage.getItem('user'));\r\nconst initialState = user ? { loggedIn: true, user } : {};\r\n\r\nexport function authentication(state = initialState, action) {\r\n    switch (action.type) {\r\n        case userConstants.GET_USERS_REQUEST:\r\n            return {\r\n                users: action.users\r\n            };\r\n        case userConstants.LOGIN_REQUEST:\r\n            return {\r\n                loggingIn: true,\r\n                user: action.user\r\n            };\r\n        case userConstants.LOGIN_SUCCESS:\r\n            return {\r\n                loggedIn: true,\r\n                user: action.user\r\n            };\r\n        case userConstants.LOGIN_FAILURE:\r\n            return {};\r\n        case userConstants.LOGOUT:\r\n            return {};\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { authentication } from './authentication.reducer';\r\nimport { users } from './users.reducer';\r\nimport { posts } from './posts.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    authentication,\r\n    users,\r\n    posts\r\n});\r\n\r\nexport default rootReducer;","import { userConstants } from '../_constants';\r\n\r\nexport function users(state = {}, action) {\r\n    switch (action.type) {\r\n        case userConstants.GET_USERS_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case userConstants.GET_USERS_SUCCESS:\r\n            return {\r\n                users: action.users\r\n            };\r\n        case userConstants.GET_USERS_FAILURE:\r\n            return {\r\n                error: action.error\r\n            };\r\n        case userConstants.DELETE_REQUEST:\r\n            // add 'deleting:true' property to user being deleted\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user =>\r\n                    user.id === action.id\r\n                        ? { ...user, deleting: true }\r\n                        : user\r\n                )\r\n            };\r\n        case userConstants.DELETE_SUCCESS:\r\n            // remove deleted user from state\r\n            return {\r\n                users: state.users.filter(user => user.id !== action.id)\r\n            };\r\n        case userConstants.DELETE_FAILURE:\r\n            // remove 'deleting:true' property and add 'deleteError:[error]' property to user \r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.id) {\r\n                        // make copy of user without 'deleting:true' property\r\n                        const { deleting, ...userCopy } = user;\r\n                        // return copy of user with 'deleteError:[error]' property\r\n                        return { ...userCopy, deleteError: action.error };\r\n                    }\r\n\r\n                    return user;\r\n                })\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import { userConstants } from '../_constants';\r\n\r\nexport function posts(state = {}, action) {\r\n    switch (action.type) {\r\n        case userConstants.GET_POSTS_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case userConstants.GET_POSTS_SUCCESS:\r\n            return {\r\n                posts: action.posts\r\n            };\r\n        case userConstants.GET_POSTS_FAILURE:\r\n            return {\r\n                error: action.error\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from '../_reducers';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware\r\n    )\r\n);","export function authHeader() {\r\n    // return authorization header with jwt token\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (user && user.token) {\r\n        return { 'Authorization': 'Bearer ' + user.token };\r\n    } else {\r\n        return {};\r\n    }\r\n}","export const config = {\r\n    // global app config object\r\n    config: JSON.stringify({\r\n        apiUrl: 'http://localhost:4000'\r\n    })\r\n}","import {config} from '../config';\r\nimport { authHeader } from '../_helpers';\r\n\r\nexport const userService = {\r\n    getUsers,\r\n    logout,\r\n    getPosts,\r\n    getAll,\r\n    getById,\r\n    update,\r\n    delete: _delete\r\n};\r\n\r\nfunction getUsers() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    };\r\n\r\n    return fetch('https://jsonplaceholder.typicode.com/users', requestOptions)\r\n        .then(handleResponse)\r\n}\r\nfunction getPosts() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    };\r\n\r\n    return fetch('https://jsonplaceholder.typicode.com/posts', requestOptions)\r\n        .then(handleResponse)\r\n}\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n}\r\n\r\nfunction getAll() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/users`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction getById(id) {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction register(user) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(user)\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/users/register`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction update(user) {\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: { ...authHeader(), 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(user)\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/users/${user.id}`, requestOptions).then(handleResponse);;\r\n}\r\n\r\n// prefixed function name with underscore because delete is a reserved word in javascript\r\nfunction _delete(id) {\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                logout();\r\n                // location.reload(true);\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        return data;\r\n    });\r\n}","import { userConstants } from '../_constants';\r\nimport { userService } from '../_services';\r\nimport { history } from '../_helpers';\r\n\r\nexport const userActions = {\r\n    getUsers,\r\n    login,\r\n    getPosts,\r\n    logout,\r\n    getAll\r\n};\r\nfunction getUsers() { \r\n    return dispatch => {\r\n        dispatch(request());\r\n\r\n        userService.getUsers()\r\n            .then(\r\n                users => { \r\n                    dispatch(success(users));\r\n                },\r\n                error => {\r\n                    console.log(error.toString());\r\n                    dispatch(failure(error.toString()));\r\n                }\r\n            );\r\n    }\r\n    function request() { return { type: userConstants.GET_USERS_REQUEST } }\r\n    function success(users) { return { type: userConstants.GET_USERS_SUCCESS, users } }\r\n    function failure(error) { return { type: userConstants.GET_USERS_FAILURE, error } }\r\n}\r\n\r\nfunction getPosts() { \r\n    return dispatch => {\r\n        dispatch(request());\r\n\r\n        userService.getPosts()\r\n            .then(\r\n                posts => { \r\n                    dispatch(success(posts));\r\n                },\r\n                error => {\r\n                    console.log(error.toString());\r\n                    dispatch(failure(error.toString()));\r\n                }\r\n            );\r\n    }\r\n    function request() { return { type: userConstants.GET_POSTS_REQUEST } }\r\n    function success(posts) { return { type: userConstants.GET_POSTS_SUCCESS, posts } }\r\n    function failure(error) { return { type: userConstants.GET_POSTS_FAILURE, error } }\r\n}\r\nfunction login(username, user, from) {\r\n    return dispatch => {\r\n        // dispatch(request({ username }));\r\n        dispatch(success(user));\r\n        history.push(from);\r\n    };\r\n\r\n    // function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\r\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\r\n    // function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\r\n}\r\n\r\nfunction logout() {\r\n    userService.logout();\r\n    return { type: userConstants.LOGOUT };\r\n}\r\n\r\n\r\nfunction getAll() {\r\n    return dispatch => {\r\n        dispatch(request());\r\n\r\n        userService.getAll()\r\n            .then(\r\n                users => dispatch(success(users)),\r\n                error => dispatch(failure(error.toString()))\r\n            );\r\n    };\r\n\r\n    function request() { return { type: userConstants.GETALL_REQUEST } }\r\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\r\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\r\n}","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport { userActions } from '../_actions';\r\n\r\nfunction HomePage() {\r\n    const users = useSelector(state => state.users.users);\r\n    const posts = useSelector(state => state.posts.posts);\r\n    const user = useSelector(state => state.authentication.user);\r\n    console.log('user ', user);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"col-lg-8 offset-lg-2\">\r\n            <div style={{display: 'flex', justifyContent: \"space-between\" }}>\r\n            <h1>Hi {user.name}!</h1>\r\n                <div style={{fontSize:26}}>\r\n                    <Link to=\"/login\">Logout</Link>\r\n                </div>\r\n            </div>\r\n            <div><Link to=\"/users\">Users</Link>\r\n                </div>\r\n                <div><Link to=\"/blogs\">Blogs</Link></div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport { HomePage };","import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { userActions } from '../_actions';\r\n\r\nfunction LoginPage() {\r\n    const [inputs, setInputs] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const { username, password } = inputs;\r\n    const loggingIn = useSelector(state => state.authentication.loggingIn);\r\n    const users = useSelector(state => state.users.users);\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => { \r\n        dispatch(userActions.getUsers()); \r\n        dispatch(userActions.getPosts());\r\n    }, []);\r\n\r\n    function handleChange(e) {\r\n        const { name, value } = e.target;\r\n        setInputs(inputs => ({ ...inputs, [name]: value }));\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        console.log('users ', users)\r\n        e.preventDefault();\r\n        if(!validateEmail()) {\r\n            console.log('Please enter valid email address.');\r\n        } else {\r\n            console.log('validation successful',username, password, username == password)\r\n            setSubmitted(true);\r\n            if (username && password && username == password) {\r\n                // get return url from location state or default to home page\r\n                const { from } = location.state || { from: { pathname: \"/home\" } };\r\n                let index = users.findIndex(user => user.email === username)\r\n                if(index > -1) {\r\n                    dispatch(userActions.login(username, users[index], from));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function validateEmail() {\r\n        if (typeof inputs.username !== \"undefined\") {\r\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n            if (pattern.test(inputs.username)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-lg-8 offset-lg-2\">\r\n            <h2>Login</h2>\r\n            <form name=\"form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Username</label>\r\n                    <input type=\"text\" name=\"username\" value={username} onChange={handleChange} className={'form-control' + (submitted && !username ? ' is-invalid' : '')} />\r\n                    {submitted && !username &&\r\n                        <div className=\"invalid-feedback\">Username is required</div>\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" name=\"password\" value={password} onChange={handleChange} className={'form-control' + (submitted && !password ? ' is-invalid' : '')} />\r\n                    {submitted && !password &&\r\n                        <div className=\"invalid-feedback\">Password is required</div>\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-primary\">\r\n                        {loggingIn && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                        Login\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { LoginPage };","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport { userActions } from '../_actions';\r\nfunction UsersPage() {\r\n    const users = useSelector(state => state.users.users);\r\n    const user = useSelector(state => state.authentication.user);\r\n    const dispatch = useDispatch();\r\n    const columns = [\r\n        {\r\n          name: 'id',\r\n          selector: 'id',\r\n        },\r\n        {\r\n          name: 'name',\r\n          selector: 'name',\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'username',\r\n          selector: 'username',\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'email',\r\n          selector: 'email',\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'address',\r\n          selector: 'address',\r\n          sortable: true,\r\n          cell: row => <div><div>{row.address.street}</div><div>{row.address.suite}</div><div>{row.address.city}</div><div>{row.address.zipcode}</div></div>,\r\n        },\r\n          {\r\n            name: 'phone',\r\n            selector: 'phone',\r\n            sortable: true,\r\n          },\r\n          {\r\n            name: 'website',\r\n            selector: 'website',\r\n            sortable: true,\r\n          },\r\n          {\r\n            name: 'company',\r\n            selector: 'company',\r\n            sortable: true,\r\n            cell: row => <div><div>{row.company.name}</div><div>{row.company.catchPhrase}</div><div>{row.company.bs}</div></div>,\r\n          }\r\n      ];\r\n\r\n    return (\r\n        <div className=\"col-lg-8 offset-lg-2\">{\r\n            users.length > 0 ? <DataTable\r\n                title=\"Users\"\r\n                columns={columns}\r\n                data={users}\r\n                highlightOnHover={true}\r\n                /> : 'No details'\r\n                }\r\n                </div>\r\n    );\r\n}\r\n\r\nexport { UsersPage };","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DataTable, { createTheme } from 'react-data-table-component';\r\n\r\nimport { userActions } from '../_actions';\r\nimport { history } from '../_helpers';\r\nfunction BlogsPage() {\r\n    const posts = useSelector(state => state.posts.posts);\r\n    const user = useSelector(state => state.authentication.user);\r\n    const dispatch = useDispatch();\r\n    const columns = [\r\n        {\r\n          name: 'userId',\r\n          selector: 'userId'\r\n        },\r\n        {\r\n          name: 'id',\r\n          selector: 'id',\r\n          sortable: true\r\n        },\r\n        {\r\n          name: 'title',\r\n          selector: 'title',\r\n          sortable: true,\r\n          wrap: true\r\n        },\r\n        {\r\n          name: 'body',\r\n          selector: 'body',\r\n          sortable: true,\r\n          wrap: true\r\n        }\r\n      ];\r\n    function onRowClicked(row) {\r\n        console.log(\"on row click\", row);\r\n        const from  = { pathname: `/blogs/${row.id}` };\r\n        history.push(from);\r\n    }\r\n    return (\r\n        <div className=\"col-lg-8 offset-lg-2\">\r\n            {\r\n            posts.length > 0 ? <DataTable\r\n                title=\"Posts\"\r\n                highlightOnHover={true}\r\n                columns={columns}\r\n                data={posts}\r\n                pagination={true}\r\n                onRowClicked={onRowClicked}\r\n                /> : 'No details'\r\n                }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { BlogsPage };","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DataTable, { createTheme } from 'react-data-table-component';\r\n\r\nimport { userActions } from '../_actions';\r\nfunction PostsPage() {\r\n    const posts = useSelector(state => state.posts.posts);\r\n    console.log('posts in home ', posts)\r\n    const user = useSelector(state => state.authentication.user);\r\n    const dispatch = useDispatch();\r\n    const columns = [\r\n        {\r\n          name: 'userId',\r\n          selector: 'userId'\r\n        },\r\n        {\r\n          name: 'id',\r\n          selector: 'id',\r\n          sortable: true\r\n        },\r\n        {\r\n          name: 'title',\r\n          selector: 'title',\r\n          sortable: true,\r\n          wrap: true\r\n        },\r\n        {\r\n          name: 'body',\r\n          selector: 'body',\r\n          sortable: true,\r\n          wrap: true\r\n        }\r\n      ];\r\n       \r\n    return (\r\n        <div className=\"col-lg-8 offset-lg-2\">\r\n            {\r\n            posts.length > 0 ? <DataTable\r\n                title=\"Posts\"\r\n                highlightOnHover={true}\r\n                columns={columns}\r\n                data={posts}\r\n                pagination={true}\r\n                /> : 'No details'\r\n                }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { PostsPage };","import React, { useEffect } from 'react';\r\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { history } from '../_helpers';\r\nimport {  userActions } from '../_actions';\r\nimport { HomePage } from '../HomePage';\r\nimport { LoginPage } from '../LoginPage';\r\nimport { UsersPage } from '../UsersPage';\r\nimport { BlogsPage } from '../BlogsPage';\r\nimport { PostsPage } from '../PostsPage';\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <div className=\"container\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    <Router history={history}>\r\n                        <Switch>\r\n                            {/* <Route exact path=\"/\" component={HomePage} /> */}\r\n                            <Route path=\"/home\" component={HomePage} />\r\n                            <Route path=\"/login\" component={LoginPage} />\r\n                            <Route path=\"/users\" component={UsersPage} />\r\n                            <Route path=\"/blogs\" component={BlogsPage} />\r\n                            <Route path=\"/posts\" component={PostsPage} />\r\n                            <Redirect from=\"*\" to=\"/\" />\r\n                        </Switch>\r\n                    </Router>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { App };","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './_helpers';\r\nimport { App } from './App';\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}