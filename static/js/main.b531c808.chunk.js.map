{"version":3,"sources":["_helpers/history.js","_constants/user.constants.js","_reducers/authentication.reducer.js","_reducers/index.js","_reducers/users.reducer.js","_reducers/posts.reducer.js","_helpers/store.js","_helpers/auth-header.js","UsersPage/UsersPage.js","BlogsPage/BlogsPage.js","BlogsPost/BlogsPost.js","HomePage/HomePage.js","config.js","_services/user.service.js","_actions/user.actions.js","LoginPage/LoginPage.js","App/App.js","index.js"],"names":["history","createBrowserHistory","userConstants","user","JSON","parse","localStorage","getItem","initialState","loggedIn","rootReducer","combineReducers","authentication","state","action","type","loggingIn","users","loading","error","posts","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","authHeader","token","DataTable","require","BlogsPost","props","blogId","useParams","useHistory","blog","location","style","display","justifyContent","onClick","goBack","border","userId","title","body","routes","path","component","useSelector","columns","prop","render","val","row","address","street","suite","city","zipcode","company","name","catchPhrase","bs","length","keys","initialData","initialPageLength","allPosts","map","item","i","index","findIndex","id","Object","assign","username","onRowClicked","rowId","find","post","from","pathname","push","initialSortBy","order","buildRowOptions","bind","HomePage","RouteWithSubRoutes","route","fontSize","to","paddingLeft","key","config","stringify","apiUrl","userService","getUsers","fetch","method","headers","then","handleResponse","logout","getPosts","getById","requestOptions","removeItem","response","text","data","ok","status","message","statusText","Promise","reject","userActions","dispatch","success","console","log","toString","failure","login","LoginPage","useState","password","inputs","setInputs","errMessage","setErrMessage","submitted","setSubmitted","useDispatch","useLocation","handleChange","e","target","value","useEffect","className","onSubmit","preventDefault","RegExp","test","validateEmail","email","onChange","color","App","exact","document","getElementById"],"mappings":"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","file":"static/js/main.b531c808.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","export const userConstants = {\r\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\r\n    \r\n    LOGOUT: 'USERS_LOGOUT',\r\n    \r\n    GET_USERS_REQUEST: 'GET_USERS_REQUEST',\r\n    GET_USERS_SUCCESS: 'GET_USERS_SUCCESS',\r\n    GET_USERS_FAILURE: 'GET_USERS_FAILURE',\r\n\r\n    GET_POSTS_REQUEST: 'GET_POSTS_REQUEST',\r\n    GET_POSTS_SUCCESS: 'GET_POSTS_SUCCESS',\r\n    GET_POSTS_FAILURE: 'GET_POSTS_FAILURE'\r\n};\r\n","import { userConstants } from '../_constants';\r\n\r\nlet user = JSON.parse(localStorage.getItem('user'));\r\nconst initialState = user ? { loggedIn: true, user } : {};\r\n\r\nexport function authentication(state = initialState, action) {\r\n    switch (action.type) {\r\n        case userConstants.LOGIN_REQUEST:\r\n            return {\r\n                loggingIn: true,\r\n                user: action.user\r\n            };\r\n        case userConstants.LOGIN_SUCCESS:\r\n            return {\r\n                loggedIn: true,\r\n                user: action.user\r\n            };\r\n        case userConstants.LOGIN_FAILURE:\r\n            return {};\r\n        case userConstants.LOGOUT:\r\n            return {};\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport { authentication } from './authentication.reducer';\r\nimport { users } from './users.reducer';\r\nimport { posts } from './posts.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    authentication,\r\n    users,\r\n    posts\r\n});\r\n\r\nexport default rootReducer;","import { userConstants } from '../_constants';\r\n\r\nexport function users(state = {}, action) {\r\n    switch (action.type) {\r\n        case userConstants.GET_USERS_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case userConstants.GET_USERS_SUCCESS:\r\n            return {\r\n                users: action.users\r\n            };\r\n        case userConstants.GET_USERS_FAILURE:\r\n            return {\r\n                error: action.error\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import { userConstants } from '../_constants';\r\n\r\nexport function posts(state = {}, action) {\r\n    switch (action.type) {\r\n        case userConstants.GET_POSTS_REQUEST:\r\n            return {\r\n                loading: true\r\n            };\r\n        case userConstants.GET_POSTS_SUCCESS:\r\n            return {\r\n                posts: action.posts\r\n            };\r\n        case userConstants.GET_POSTS_FAILURE:\r\n            return {\r\n                error: action.error\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from '../_reducers';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware\r\n    )\r\n);","export function authHeader() {\r\n    // return authorization header with jwt token\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (user && user.token) {\r\n        return { 'Authorization': 'Bearer ' + user.token };\r\n    } else {\r\n        return {};\r\n    }\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst DataTable = require('react-data-components').DataTable;\r\n\r\nfunction UsersPage() {\r\n    const users = useSelector(state => state.users.users);\r\n    const renderAddress = (val, row) => (<div><div>{row.address.street}</div><div>{row.address.suite}</div><div>{row.address.city}</div><div>{row.address.zipcode}</div></div>);\r\n    const renderComapny = (val, row) => (<div><div>{row.company.name}</div><div>{row.company.catchPhrase}</div><div>{row.company.bs}</div></div>);\r\n    const columns = [\r\n        {\r\n          title: 'ID',\r\n          prop: 'id',\r\n        },\r\n        {\r\n          title: 'Name',\r\n          prop: 'name',\r\n        },\r\n        {\r\n          title: 'User Name',\r\n          prop: 'username',\r\n        },\r\n        {\r\n          title: 'Email',\r\n          prop: 'email',\r\n        },\r\n        {\r\n          title: 'Address',\r\n          prop: 'address',\r\n          render: renderAddress\r\n        },\r\n          {\r\n            title: 'Phone',\r\n            prop: 'phone',\r\n          },\r\n          {\r\n            title: 'Website',\r\n            prop: 'website',\r\n          },\r\n          {\r\n            title: 'Company',\r\n            prop: 'company',\r\n            render: renderComapny\r\n          }\r\n      ];\r\n    return (\r\n        <div>{\r\n            users.length > 0 ? <DataTable\r\n            keys=\"id\"\r\n            columns={columns}\r\n            initialData={users}\r\n            initialPageLength={5}\r\n        /> : 'No details'\r\n                }\r\n                </div>\r\n    );\r\n}\r\n\r\nexport { UsersPage };","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { history } from '../_helpers';\r\n\r\nconst DataTable = require('react-data-components').DataTable;\r\n\r\nfunction BlogsPage() {\r\n    const posts = useSelector(state => state.posts.posts);\r\n    const users = useSelector(state => state.users.users);\r\n    const allPosts = posts.map((item, i) => {\r\n      const index = users.findIndex(user => user.id === item.userId);\r\n      return Object.assign({}, item, {name: users[index].name,username: users[index].username})\r\n    });\r\n    const columns = [\r\n        {\r\n          title: 'ID',\r\n          prop: 'id'\r\n        },\r\n        {\r\n          title: 'Name',\r\n          prop: 'name'\r\n        },\r\n        {\r\n          title: 'User Name',\r\n          prop: 'username'\r\n        },\r\n        {\r\n          title: 'Title',\r\n          prop: 'title'\r\n        },\r\n        {\r\n          title: 'Body',\r\n          prop: 'body'\r\n        }\r\n      ];\r\n    function onRowClicked(row) {\r\n      const rowId = row.id;\r\n        let blog = posts.find(post => post.id === rowId);\r\n        const from  = { pathname: `/blogs/${rowId}`, blog };\r\n        history.push(from);\r\n    }\r\n    \r\n    function buildRowOptions(row) {\r\n      return {\r\n        onClick: onRowClicked.bind({}, row)\r\n      };\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n            posts.length > 0 ? <DataTable\r\n                keys=\"id\"\r\n                columns={columns}\r\n                initialData={allPosts}\r\n                initialPageLength={10}\r\n                initialSortBy={{ prop: 'city', order: 'descending' }}\r\n                buildRowOptions={buildRowOptions}\r\n            /> : 'No details'\r\n                }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { BlogsPage };","import React from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nfunction BlogsPost(props) {\r\n    let { blogId } = useParams();\r\n    let history = useHistory();\r\n    const blog = props.location.blog\r\n    return (\r\n        <>\r\n        <div style={{display: 'flex', justifyContent: \"space-between\" }}>\r\n            <div>Now showing post {blogId}</div>\r\n            <button onClick={() => history.goBack()}>Back</button>\r\n        </div>\r\n        <div>\r\n            <table border=\"1\">\r\n                <tr>\r\n                    <th>User ID</th><th>Title</th><th>Body</th>\r\n                </tr>\r\n                <tr>\r\n                    <td>{blog.userId}</td>\r\n                    <td>{blog.title}</td>\r\n                    <td>{blog.body}</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport {BlogsPost}","import React from 'react';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { UsersPage } from '../UsersPage';\r\nimport { BlogsPage } from '../BlogsPage';\r\nimport { BlogsPost } from '../BlogsPost';\r\n\r\nconst routes = [\r\n    {\r\n      path: \"/home/users\",\r\n      component: UsersPage\r\n    },\r\n    {\r\n      path: \"/home/blogs\",\r\n      component: BlogsPage\r\n    },\r\n    {\r\n        path: \"/home/blogs/:blogId\",\r\n        component: BlogsPost\r\n    }\r\n  ];\r\n\r\nfunction HomePage() {\r\n    const user = useSelector(state => state.authentication.user);\r\n\r\n    function RouteWithSubRoutes(route) {\r\n        return (\r\n          <Route\r\n            path={route.path}\r\n            render={props => (\r\n              // pass the sub-routes down to keep nesting\r\n              <route.component {...props} routes={route.routes} />\r\n            )}\r\n          />\r\n        );\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{display: 'flex', justifyContent: \"space-between\" }}>\r\n            <h1>Hi {user.name}!</h1>\r\n                <div style={{fontSize:26}}>\r\n                    <Link to=\"/login\">Logout</Link>\r\n                </div>\r\n            </div>\r\n            <div style={{display: 'flex'}}>\r\n                <div>\r\n                    <div>\r\n                        <Link to=\"/home/users\">Users</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to=\"/home/blogs\">Blogs</Link>\r\n                    </div>\r\n                </div>\r\n                <div style={{paddingLeft: '3%'}}>\r\n                    <Switch>\r\n                        {routes.map((route, i) => (\r\n                            <RouteWithSubRoutes key={i} {...route} />\r\n                        ))}\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { HomePage };","export const config = {\r\n    // global app config object\r\n    config: JSON.stringify({\r\n        apiUrl: 'https://jsonplaceholder.typicode.com'\r\n    })\r\n}","import {config} from '../config';\r\nimport { authHeader } from '../_helpers';\r\n\r\nexport const userService = {\r\n    getUsers,\r\n    logout,\r\n    getPosts,\r\n    getById\r\n};\r\nconst apiUrl = JSON.parse(config.config).apiUrl;\r\nfunction getUsers() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    };\r\n    \r\n    return fetch(`${apiUrl}/users`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\nfunction getPosts() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    };\r\n\r\n    return fetch(`${apiUrl}/posts`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n}\r\n\r\nfunction getById(id) {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                logout();\r\n                // location.reload(true);\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        return data;\r\n    });\r\n}","import { userConstants } from '../_constants';\r\nimport { userService } from '../_services';\r\nimport { history } from '../_helpers';\r\n\r\nexport const userActions = {\r\n    getUsers,\r\n    login,\r\n    getPosts,\r\n    logout,\r\n};\r\nfunction getUsers() { \r\n    return dispatch => {\r\n        dispatch(request());\r\n\r\n        userService.getUsers()\r\n            .then(\r\n                users => { \r\n                    dispatch(success(users));\r\n                },\r\n                error => {\r\n                    console.log(error.toString());\r\n                    dispatch(failure(error.toString()));\r\n                }\r\n            );\r\n    }\r\n    function request() { return { type: userConstants.GET_USERS_REQUEST } }\r\n    function success(users) { return { type: userConstants.GET_USERS_SUCCESS, users } }\r\n    function failure(error) { return { type: userConstants.GET_USERS_FAILURE, error } }\r\n}\r\n\r\nfunction getPosts() { \r\n    return dispatch => {\r\n        dispatch(request());\r\n\r\n        userService.getPosts()\r\n            .then(\r\n                posts => { \r\n                    dispatch(success(posts));\r\n                },\r\n                error => {\r\n                    console.log(error.toString());\r\n                    dispatch(failure(error.toString()));\r\n                }\r\n            );\r\n    }\r\n    function request() { return { type: userConstants.GET_POSTS_REQUEST } }\r\n    function success(posts) { return { type: userConstants.GET_POSTS_SUCCESS, posts } }\r\n    function failure(error) { return { type: userConstants.GET_POSTS_FAILURE, error } }\r\n}\r\nfunction login(username, user, from) {\r\n    return dispatch => {\r\n        // dispatch(request({ username }));\r\n        dispatch(success(user));\r\n        history.push(from);\r\n    };\r\n\r\n    // function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\r\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\r\n    // function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\r\n}\r\n\r\nfunction logout() {\r\n    userService.logout();\r\n    return { type: userConstants.LOGOUT };\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { userActions } from '../_actions';\r\n\r\nfunction LoginPage() {\r\n    const [inputs, setInputs] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n    const [errMessage, setErrMessage] = useState('');\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const { username, password } = inputs;\r\n    const loggingIn = useSelector(state => state.authentication.loggingIn);\r\n    const users = useSelector(state => state.users.users);\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => { \r\n        dispatch(userActions.getUsers()); \r\n        dispatch(userActions.getPosts());\r\n    }, []);\r\n\r\n    function handleChange(e) {\r\n        const { name, value } = e.target;\r\n        setInputs(inputs => ({ ...inputs, [name]: value }));\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if(!validateEmail()) {\r\n            setErrMessage('Please enter valid email address.');\r\n        } else {\r\n            setSubmitted(true);\r\n            setErrMessage('');\r\n            if (username && password && username === password) {\r\n                const { from } = location.state || { from: { pathname: \"/home\" } };\r\n                let index = users.findIndex(user => user.email === username)\r\n                if(index > -1) {\r\n                    dispatch(userActions.login(username, users[index], from));\r\n                }\r\n            } else {\r\n                setErrMessage('Please enter valid email address and password.');\r\n            }\r\n        }\r\n        console.log(errMessage);\r\n    }\r\n\r\n    function validateEmail() {\r\n        if (typeof inputs.username !== \"undefined\") {\r\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n            if (pattern.test(inputs.username)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-lg-8 offset-lg-2\">\r\n            <h2>Login</h2>\r\n            <form name=\"form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Username</label>\r\n                    <input type=\"text\" name=\"username\" value={username} onChange={handleChange} className={'form-control' + (submitted && !username ? ' is-invalid' : '')} />\r\n                    {submitted && !username &&\r\n                        <div className=\"invalid-feedback\">Username is required</div>\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" name=\"password\" value={password} onChange={handleChange} className={'form-control' + (submitted && !password ? ' is-invalid' : '')} />\r\n                    {submitted && !password &&\r\n                        <div className=\"invalid-feedback\">Password is required</div>\r\n                    }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button className=\"btn btn-primary\">\r\n                        {loggingIn && <span className=\"spinner-border spinner-border-sm mr-1\"></span>}\r\n                        Login\r\n                    </button>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    {!!errMessage ?\r\n                        <div style={{color: 'red'}}>{errMessage}</div> : null\r\n                    }\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { LoginPage };\r\n","import React from 'react';\r\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport { history } from '../_helpers';\r\nimport { HomePage } from '../HomePage';\r\nimport { LoginPage } from '../LoginPage';\r\nimport { BlogsPost } from '../BlogsPost';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <div>\r\n                <div>\r\n                    <Router history={history}>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={LoginPage} />\r\n                            <Route exact path=\"/user_dashboard\" component={LoginPage} />\r\n                            <Route path=\"/login\" component={LoginPage} />\r\n                            <Route path=\"/home\" component={HomePage} />\r\n                            <Route path=\"/blogs/:blogId\" component={BlogsPost} />\r\n                            <Redirect from=\"*\" to=\"/\" />\r\n                        </Switch>\r\n                    </Router>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { App };","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './_helpers';\r\nimport { App } from './App';\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}